name: CI

on:
    pull_request:
        types: [opened, synchronize, reopened]

jobs:
    pre-commit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
              with:
                  python-version: "3.x"

            - name: Setup Node.js
              uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
              with:
                  node-version: "latest"

            - name: Install Prettier
              run: npm install -g prettier

            - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd #v3.0.1
              with:
                  extra_args: --all-files

    test:
        runs-on: ubuntu-latest
        services:
            docker:
                image: docker:dind
                options: --privileged
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # stable
              with:
                  toolchain: stable

            - name: Setup Docker
              run: |
                  sudo systemctl start docker
                  sudo usermod -aG docker $USER
                  docker pull alpine/git:latest
                  which docker

            - name: Debug Docker Git Commands
              run: |
                  mkdir -p /tmp/test_repo
                  cd /tmp/test_repo
                  echo "=== Environment Info ==="
                  pwd
                  whoami
                  docker --version
                  echo "=== Testing Docker Git ==="
                  echo "1. Simple git init:"
                  docker run --rm --entrypoint sh -v "$(pwd):/workspace" -w "/workspace" alpine/git:latest -c "git init" || echo "INIT FAILED"
                  echo "2. Check .git exists on host:"
                  ls -la .git/ || echo "No .git directory on host"
                  echo "3. Check .git inside container:"
                  docker run --rm --entrypoint sh -v "$(pwd):/workspace" -w "/workspace" alpine/git:latest -c "ls -la .git" || echo "No .git in container"
                  echo "4. Test git config separately:"
                  docker run --rm --entrypoint sh -v "$(pwd):/workspace" -w "/workspace" alpine/git:latest -c "git config user.name 'Test User'" || echo "CONFIG FAILED"
                  echo "5. Test combined with error handling:"
                  docker run --rm --entrypoint sh -v "$(pwd):/workspace" -w "/workspace" alpine/git:latest -c "git init && echo 'Init OK' && git config user.name 'Test User' && echo 'Config OK'" || echo "COMBINED FAILED"
                  echo "6. Final state:"
                  ls -la .git/ || echo "No final .git directory"

            - name: Restore cache
              uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-${{ github.run_id }}
                  restore-keys: |
                      cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
                      cargo-${{ runner.os }}-

            - run: cargo install cargo-tarpaulin --locked || true

            - run: make test

            - name: Save cache
              uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
              if: always()
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-${{ github.run_id }}
